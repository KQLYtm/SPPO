@using Microsoft.AspNetCore.Identity
@using sppo.Areas.Identity.Data

@model sppo.Models.ProfileVM
@inject UserManager<Profile> UserManager

@{
	var picturePath = "~/images/" + (Model.ProfilePicture ?? "noimage.jpg");

}

<thead>
</thead>
<body>
	<div class="container">
		<div class="row gutters-sm">
			<div class="col-md-4 mb-3">
				<div class="card">
					<div class="card-body">
						<div class="d-flex flex-column align-items-center text-center">
							@if (Model.ProfilePicture == null) {
						        <img id="pic" src="https://bootdey.com/img/Content/avatar/avatar7.png" class="rounded-circle" width="150">
							}
							else{ 
								<img id="pic" src=@Model.ProfilePicture class="rounded-circle" width="150">
							}

							@*<img id="myImg" src="@picturePath" class="rounded-circle" width="150">*@
							<div id="myModal" class="modal">
								<span class="close">&times;</span>
								<img class="modal-content" id="pic1">
							</div>
							<div class="mt-3">
								<h4>@Model.Username</h4>
								<p class="text-secondary mb-1">Full Stack Developer</p>
								<p class="text-muted font-size-sm">
									@if (Model.User != null)
										@Model.AdressUser
										else
											@Model.AdressCompany
								</p>
								<div class="container2">
									<p><b>Average grade: </b></p>
									<div class="stars-outer">
										<div class="stars-inner"></div>
									</div>
									<span class="number-rating"></span>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="card m  t-3">
					<ul class="list-group list-group-flush">
						<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
							<h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-globe mr-2 icon-inline"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path></svg>Website</h6>
							<span class="text-secondary">www.fit.ba</span>
						</li>
						<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
							<h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-github mr-2 icon-inline"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>Github</h6>
							<span class="text-secondary">kqly</span>
						</li>

						<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
							<h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-instagram mr-2 icon-inline text-danger"><rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line></svg>Instagram</h6>
							<span class="text-secondary">emin.a</span>
						</li>
						<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
							<h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-facebook mr-2 icon-inline text-primary"><path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path></svg>Facebook</h6>
							<span class="text-secondary">emin</span>
						</li>
					</ul>
						<button id="logout" onclick="window.location='/Profile/DeleteProfile?ProfileId=@Model.Id'" type="submit" class="btn btn-danger">Delete profile</button>
				</div>
			</div>
			<div class="col-md-8">
				<div class="card mb-3">
					<div class="card-body">
						<div class="row">
							<div class="col-sm-3">
								<h6 class="mb-0">Full Name</h6>
							</div>
							<div class="col-sm-9 text-secondary">
								@Model.Username
							</div>
						</div>
						<hr>
						<div class="row">
							<div class="col-sm-3">
								<h6 class="mb-0">Email</h6>
							</div>
							<div class="col-sm-9 text-secondary">
								@Model.Email
							</div>
						</div>
						<hr>
						<div class="row">
							<div class="col-sm-3">
								<h6 class="mb-0">Phone</h6>
							</div>
							<div class="col-sm-9 text-secondary">
								@Model.PhoneNumber
							</div>
						</div>
						<hr>
						<div class="row">
							<div class="col-sm-3">
								<h6 class="mb-0">Mobile</h6>
							</div>
							<div class="col-sm-9 text-secondary">
								@Model.PhoneNumber
							</div>
						</div>
						<hr>
						<div class="row">
							<div class="col-sm-3">
								<h6 class="mb-0">Address</h6>
							</div>
							<div class="col-sm-9 text-secondary">
								@Model.AdressCompany
							</div>
						</div>
					</div>
				</div>
				<label>Comments: </label>
				<div id="commentList">
					@if (Model.reviews != null)
					{
						@foreach (var x in Model.reviews)
						{
							<div id="commentWrapp">
								<img id="giverImg" src="@x.GiverPicture" />
								<div id="details">
									@if (UserManager.GetUserName(User) == x.GiverUserName)
									{
										<button class="btn btn-outline-danger" onclick="DeleteComment(@x.Id)" id="btn-delete">Delete</button>
										<button class="btn btn-outline-info" onclick="EditComment(@x.Id,this)" id="btn-edit">Edit</button>

									}
									<label id="giverUserName">@x.GiverUserName:</label>
									<p id="commentDate">@x.PostDate</p>
									<textarea readonly="readonly" cols="70" onclick="auto_grow(this);" id="com">@x.Commentary</textarea>
								</div>
							</div>
						}
					}
				</div>
			</div>
		</div>
	</div>
</body>
<div class="form-group" id="stars">
	<span class="text-warning">
		<i class="ratingStar far fa-star" value="1"></i>
		<i class="ratingStar far fa-star" value="2"></i>
		<i class="ratingStar far fa-star" value="3"></i>
		<i class="ratingStar far fa-star" value="4"></i>
		<i class="ratingStar far fa-star" value="5"></i>
	</span>
</div>




<div id="inputComment">
	<label>Input Comment</label>
	<textarea class="form-control" rows="5" id="comment" required></textarea>
	<button id="saveComment" onclick="AddComment()">Comment</button>
</div>

<style>

	.stars-outer{
		position:relative;
		display:inline-block;
	}
	.stars-inner{
		position:absolute;
		top:0;	
		left:0;
		white-space:nowrap;
		overflow:hidden;
		width:0; 
	}
	.stars-outer::before {
		content: "\f005 \f005 \f005 \f005 \f005";
		font-family:"Font Awesome 5 Free";
		font-weight:900;
		color:#ccc;
	}
	.stars-inner::before {
		content: "\f005 \f005 \f005 \f005 \f005";
		font-family: "Font Awesome 5 Free";
		font-weight: 900;
		color: #f8ce0b;
	}

	/*Comments*/
	#btn-delete,#btn-edit {
		float: right;
		margin-right: 10px;
		margin-top: 5px;
	}

	#commentWrapp {
		background-color: whitesmoke;
		margin-bottom: 20px;
		border-radius: 20px;
	}

	#giverImg {
		border-radius: 70%;
		margin: 6px 15px 0 10px;
		float: left;
		width: 75px;
		height: 75px;
	}

	#giverUserName {
		color: darkred;
		margin-top: 15px;
	}

	#commentDate {
		font-size: 11px;
		color: gray;
		margin-top: -10px;
	}

	#com {
		padding: 10px 0px 7px 0px;
		/*margin-left: 105px;*/
		background-color: whitesmoke;
		border: none;
		overflow: hidden;
		resize: none;
		margin-left: 10px;
	}
	/*Comments*/

	#pic {
		border-radius: 5px;
		cursor: pointer;
		transition: 0.3s;
	}


		#pic:hover {
			opacity: 0.7;
		}

	.modal {
		display: none;
		position: fixed;
		z-index: 1;
		padding-top: 50px;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		background-color: rgb(0,0,0);
		background-color: rgba(0,0,0,0.9);
	}

	.modal-content {
		margin: auto;
		display: block;
		width: 40%;
		/*max-width: 700px;*/
	}

	.close {
		position: absolute;
		top: 15px;
		right: 35px;
		color: #f1f1f1;
		font-size: 40px;
		font-weight: bold;
		transition: 0.3s;
	}

		.close:hover,
		.close:focus {
			color: #bbb;
			text-decoration: none;
			cursor: pointer;
		}
</style>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
	const starsTotal = 5;
    function auto_grow(element) {
        element.style.height = "1px";
        element.style.height = (element.scrollHeight) + "px";
    }

     //Rating stars
    $(".ratingStar").hover(function () {
        $(".ratingStar").addClass("far").removeClass("fas");
        $(this).addClass("fas").removeClass("far");
        $(this).prevAll(".ratingStar").addClass("fas").removeClass("far");
	});

    $(".ratingStar").click(function () {
        var starValue = $(this).attr("value");
        var url = '/Review/SaveRating?grade=' + starValue + '&reciverId=' +'@Model.Id';
		$.get(url, function (data) {
			window.location.reload();
		});
    });

	window.onload = function () {
		var url = '/Review/CalculateAvgGrade?ProfileId=' +'@Model.Id';
		$.get(url, function (data) {
			const starPrecentage = ( data / starsTotal) * 100;
			var precentage = `${Math.round( starPrecentage / 10) * 10}%`;
			document.querySelector(`.stars-inner`).style.width = precentage;
		});
        if (@Model.MyDetails.ToString().ToLower() === true) {
            document.getElementById("stars").style.display = "none";
            document.getElementById("inputComment").style.display = "none";
        }
        else if(@Model.MyDetails.ToString().ToLower() === false){
            for (var i = 0; i <= @Model.Grade; i++) {
                $(".ratingStar:nth-child(" + i + ")").removeClass("far").addClass("fas");
			}
		}
	}

    function DeleteComment(id) {
        var url = '/Review/DeleteComment?commentId=' + id;
        $.get(url, function (d) {
            window.location.reload();
        });
    }

    function EditComment(id, x) {
        var parent = x.parentElement;
        var text = parent.children.item(4);

        auto_grow(text);
        text.style.border = "1px solid red";
        text.removeAttribute('readonly');

        var save = document.createElement("button");
        save.setAttribute("class", "btn btn-outline-info");
        save.innerHTML = "Save";
        save.setAttribute("id", "saveButton");
		save.style.marginBottom = "35px";

        if (!document.getElementById("saveButton"))
            parent.appendChild(save);

        save.onclick = function () {
            text.style.border = "none";
            var url = '/Review/Edit?id=' + id + '&comment=' + text.value;
            $.get(url, function (data) {
                window.location.reload();
            });
            parent.removeChild(save);
        }
    }



    var modal = document.getElementById("myModal");
    var img = document.getElementById("pic");
    var modalImg = document.getElementById("pic1");
    img.onclick = function () {
        modal.style.display = "block";
        modalImg.src = this.src;
    }

    var span = document.getElementsByClassName("close")[0];
    span.onclick = function () {
        modal.style.display = "none";

    }

    //Comments
    function AddComment() {
        var comment = document.getElementById("comment").value;

        var lista = document.getElementById("commentList");

        var commentWrapp = document.createElement("div");
        commentWrapp.setAttribute("id", "commentWrapp");

        var img = document.createElement("img");
        img.setAttribute("id", "giverImg");

        var btn = document.createElement("button");
        btn.setAttribute("id", "btn");
        btn.setAttribute("class", "btn btn-danger");
        btn.innerHTML = "Delete comment";

        var giverUserName = document.createElement("label");
        giverUserName.setAttribute("id", "giverUserName");
        giverUserName.innerHTML = "@UserManager.GetUserName(User)";

        var commentDate = document.createElement("p");
        commentDate.setAttribute("id", "commentDate");
        commentDate.innerHTML = new Date();

        var com = document.createElement("div");
        com.setAttribute("id", "com");
        com.innerHTML = comment;

        var details = document.createElement("div");
        details.setAttribute("id", "details");
        details.appendChild(btn);
        details.appendChild(giverUserName);
        details.appendChild(commentDate);
        details.appendChild(com);

        commentWrapp.appendChild(img);
        commentWrapp.appendChild(details);


        lista.appendChild(commentWrapp);

         var url = '/Review/SaveComment?comment=' + comment + '&reciverId=' + '@Model.Id';

        $.get(url, function (data) {
            img.setAttribute("src", data);
            window.location.reload();
        });
    }

</script>
